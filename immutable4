public class Employee 
{
    //All final attributes
    private final String firstName; // required
    private final String lastName; // optional
    private final int age; // optional
    private final String company; // optional
    private final int experience; // optional
 
    private Employee(UserBuilder builder) {
        this.firstName = builder.firstName;
        this.lastName = builder.lastName;
        this.age = builder.age;
        this.company = builder.company;
        this.experience = builder.experience;
    }
 
    //All getter, and NO setter to provde immutability
    public String getFirstName() {
        return firstName;
    }
    public String getLastName() {
        return lastName;
    }
    public int getAge() {
        return age;
    }
    public String getCompany() {
        return company;
    }
    public int getExperience() {
        return experience;
    }
 
    @Override
    public String toString() {
        return "Employee: "+this.firstName+", "+this.lastName+", "+this.age+", "+this.company+", "+this.experience;
    }
 
    public static class UserBuilder 
    {
        private final String firstName;
        private String lastName;
        private int age;
        private String company;
        private int experience;
 
		public UserBuilder(String firstName) {
            this.firstName = firstName;
        }
        public UserBuilder lastName(String lastName) {
            this.lastName = lastName;
            return this;
        }
        public UserBuilder age(int age) {
            this.age = age;
            return this;
        }
        public UserBuilder company(String company) {
            this.company = company;
            return this;
        }
        public UserBuilder experience(int experience) {
            this.experience = experience;
            return this;
        }
        //Return the finally constructed User object
        public Employee build() {
            Employee user =  new Employee(this);
            validateUserObject(user);
            return user;
        }
        private void validateUserObject(Employee user) {
            //Do some basic validations to check 
            //if user object does not break any assumption of system
        }
    }

public static void main(String[] args) {
    Employee user1 = new Employee.UserBuilder("Lokesh")
    .lastName("Gupta")
	.age(30)
    .company("1234567")
    .experience(2)
    .build();
 
    System.out.println(user1);
 
    Employee user2 = new Employee.UserBuilder("Jack")
    .age(40)
    .company("5655")
	.experience(3)
    //no lastName
    .build();
 
    System.out.println(user2);
 
    Employee user3 = new Employee.UserBuilder("Super")
	.lastName("Man")
    //No age
    //No company
    //no experience
    .build();
 
    System.out.println(user3);
}
}
